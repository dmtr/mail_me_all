# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project, GKE_EMAIL with the service account email, GKE_KEY with the service account key.
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER and IMAGE environment variables (below).

name: Build and Deploy to GKE

on:
  push:
    branches: 
      - master
    paths:
    - 'frontend/**'

# Environment variables available to all jobs and steps in this workflow
env:
  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  GKE_EMAIL: ${{ secrets.GKE_EMAIL }}
  GITHUB_SHA: ${{ github.sha }}
  GKE_ZONE: us-west1-b
  GKE_CLUSTER: standard-cluster-mailme

jobs:
  setup-build-publish-deploy:
    name: build frontend
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@master
    
    - uses: actions/setup-node@v1
      with:
       node-version: '10.16.1'
 
    - name: Build App
      working-directory: ./frontend/client
      run: |
        yarn install
        yarn run build
        
    - uses: actions/setup-python@v1
      with:
        python-version: '2.7.9'
      
    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_email: ${{ secrets.GKE_EMAIL }}
        service_account_key: ${{ secrets.GKE_KEY }}

    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: |
        # Set up docker to authenticate
        # via gcloud command-line tool.
        gcloud auth configure-docker
      
    # Build the Docker image
    - name: Build
      working-directory: ./frontend
      run: |        
        docker build -f Dockerfile.prod -t gcr.io/"$GKE_PROJECT"/mailme_app_frontend:"$GITHUB_SHA" .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |
        docker push gcr.io/$GKE_PROJECT/mailme_app_frontend:$GITHUB_SHA
        

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      working-directory: ./deployment
      run: |
        PROKECT_ID=$GKE_PROJECT FRONTEND_VERSION=$GITHUB_SHA make
        kubectl apply -f ./k8s/web.yaml 
        kubectl get services -o wide
